# -*- coding: utf-8 -*-
"""Group7 Titanic3 csv.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dI6Uyzd1zyPOszSc7M50oRtslpT0WHgi

### Business understanding
What are the factors that determined the survival rate for example
1. Age,
2. Social class denoted by passenger class pclass
3. How having a family on board can influences group decision on survival
"""

#importing libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#importing csv file on Titanic
df = pd.read_csv('/content/titanic3 (1).csv', header=0)
df

"""###Data understanding

**Variable Descriptions **
1. pclass Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) survival Survival (0 = No; 1 = Yes)
2. name Name
3. sex Sex
4. age Age
5. sibsp Number of Siblings/Spouses Aboard
6. parch Number of Parents/Children Aboard
7. ticket Ticket Number
8. fare Passenger Fare
9. cabin Cabin embarked
10. Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton)
11. boat Lifeboat
12. body Body Identification Number
13. home.dest Home/Destination

"""

df.head()

df.tail()

df.info()

# Statistical summary
df.describe()

# identify missing values in dataframe by:
#deleting missing Columns by % of availabe data
#create separate model to handle missing value(time consuming)
#statistical methods.
df.isnull().sum()

# identify datatypes in dataframe
df.dtypes

"""### Handling missing values
### by substituting using statistical methods
"""

#filling all numerical null values
df = df.fillna(df.mean(numeric_only=True))
df.info()

df['boat'] = df['boat'].fillna(df['boat'].mode()[0])

df['embarked'] = df['embarked'].fillna(df['embarked'].mode()[0])

df.info()

df['home.dest'] = df['home.dest'].fillna(df['home.dest'].mode()[0])

df.info()

"""### Data visualization

"""

df.info()

# Drop cabin column. Data available is less than 50% by a margin
df = df.drop(columns = ['cabin'])

# Gender count
df['sex'].value_counts()

plt.figure(figsize=(13, 9))
plt.subplot(2, 2, 1)
sns.countplot(x='sex', data=df, hue='survived', palette='Set1')
plt.title('Survival Rate by Gender')

plt.figure(figsize=(6,4))
sns.scatterplot(df, x='fare', y='age', cmap='coolwarm', palette='bright')
plt.title('Fair paid Versus Age')
plt.show()

plt.figure(figsize=(6,4))
sns.scatterplot(df, x='pclass', y='age', cmap='coolwarm', palette='bright')
plt.title('Pclass Versus Age ')
plt.show()

## data cleaning
## drop all columns with string data type
df = df.drop(columns = ['name'])

df = df.drop(columns = ['ticket','sex','embarked','home.dest'])

df = df.drop(columns = ['boat'])

plt.figure(figsize=(8,5))
sns.heatmap(df.corr(), annot= True, cmap='coolwarm')

#check outliers for the whole dataset
plt.figure(figsize=(10,5))
sns.boxplot(df.select_dtypes(include='number'))

df['parch'].value_counts()

sns.histplot(df['parch'], kde=True)

sns.histplot(df['sibsp'], kde=True)

sns.histplot(df['age'], kde=True)

sns.histplot(df['pclass'], kde=True)

